// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.pfs.restful.web;

import com.pfs.restful.domain.Faktur;
import com.pfs.restful.domain.FakturItem;
import com.pfs.restful.domain.Merchandise;
import com.pfs.restful.domain.PfsUser;
import com.pfs.restful.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Faktur, String> ApplicationConversionServiceFactoryBean.getFakturToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.pfs.restful.domain.Faktur, java.lang.String>() {
            public String convert(Faktur faktur) {
                return new StringBuilder().append(faktur.getCreateDate()).toString();
            }
        };
    }
    
    public Converter<Long, Faktur> ApplicationConversionServiceFactoryBean.getIdToFakturConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.pfs.restful.domain.Faktur>() {
            public com.pfs.restful.domain.Faktur convert(java.lang.Long id) {
                return Faktur.findFaktur(id);
            }
        };
    }
    
    public Converter<String, Faktur> ApplicationConversionServiceFactoryBean.getStringToFakturConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.pfs.restful.domain.Faktur>() {
            public com.pfs.restful.domain.Faktur convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Faktur.class);
            }
        };
    }
    
    public Converter<FakturItem, String> ApplicationConversionServiceFactoryBean.getFakturItemToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.pfs.restful.domain.FakturItem, java.lang.String>() {
            public String convert(FakturItem fakturItem) {
                return new StringBuilder().append(fakturItem.getQty()).toString();
            }
        };
    }
    
    public Converter<Long, FakturItem> ApplicationConversionServiceFactoryBean.getIdToFakturItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.pfs.restful.domain.FakturItem>() {
            public com.pfs.restful.domain.FakturItem convert(java.lang.Long id) {
                return FakturItem.findFakturItem(id);
            }
        };
    }
    
    public Converter<String, FakturItem> ApplicationConversionServiceFactoryBean.getStringToFakturItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.pfs.restful.domain.FakturItem>() {
            public com.pfs.restful.domain.FakturItem convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), FakturItem.class);
            }
        };
    }
    
    public Converter<Merchandise, String> ApplicationConversionServiceFactoryBean.getMerchandiseToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.pfs.restful.domain.Merchandise, java.lang.String>() {
            public String convert(Merchandise merchandise) {
                return new StringBuilder().append(merchandise.getName()).append(' ').append(merchandise.getPrice()).toString();
            }
        };
    }
    
    public Converter<Long, Merchandise> ApplicationConversionServiceFactoryBean.getIdToMerchandiseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.pfs.restful.domain.Merchandise>() {
            public com.pfs.restful.domain.Merchandise convert(java.lang.Long id) {
                return Merchandise.findMerchandise(id);
            }
        };
    }
    
    public Converter<String, Merchandise> ApplicationConversionServiceFactoryBean.getStringToMerchandiseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.pfs.restful.domain.Merchandise>() {
            public com.pfs.restful.domain.Merchandise convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Merchandise.class);
            }
        };
    }
    
    public Converter<PfsUser, String> ApplicationConversionServiceFactoryBean.getPfsUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.pfs.restful.domain.PfsUser, java.lang.String>() {
            public String convert(PfsUser pfsUser) {
                return new StringBuilder().append(pfsUser.getUsername()).append(' ').append(pfsUser.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, PfsUser> ApplicationConversionServiceFactoryBean.getIdToPfsUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.pfs.restful.domain.PfsUser>() {
            public com.pfs.restful.domain.PfsUser convert(java.lang.Long id) {
                return PfsUser.findPfsUser(id);
            }
        };
    }
    
    public Converter<String, PfsUser> ApplicationConversionServiceFactoryBean.getStringToPfsUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.pfs.restful.domain.PfsUser>() {
            public com.pfs.restful.domain.PfsUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PfsUser.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getFakturToStringConverter());
        registry.addConverter(getIdToFakturConverter());
        registry.addConverter(getStringToFakturConverter());
        registry.addConverter(getFakturItemToStringConverter());
        registry.addConverter(getIdToFakturItemConverter());
        registry.addConverter(getStringToFakturItemConverter());
        registry.addConverter(getMerchandiseToStringConverter());
        registry.addConverter(getIdToMerchandiseConverter());
        registry.addConverter(getStringToMerchandiseConverter());
        registry.addConverter(getPfsUserToStringConverter());
        registry.addConverter(getIdToPfsUserConverter());
        registry.addConverter(getStringToPfsUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
